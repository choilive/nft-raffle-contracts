/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC721, MockERC721Interface } from "../MockERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "scale",
        type: "uint256",
      },
    ],
    name: "RoyaltyRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "TokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoyaltyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintWithAutoTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mintWithUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mintWithUriAutoTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_scale",
        type: "uint256",
      },
    ],
    name: "setRoyaltyRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "transferWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052610bb8600655620186a06007553480156200001e57600080fd5b5060405162002b5b38038062002b5b83398101604081905262000041916200036e565b8251839083906200005a906000906020850190620001fb565b50805162000070906001906020840190620001fb565b5050506200008d620000876200012160201b60201c565b62000125565b825160208085019190912060805281518282012060a052620000c19063152a902d60e11b906200126262000177821b17901c565b620000de6380ac58cd60e01b6200017760201b620012621760201c565b620000fb635b5e139f60e01b6200017760201b620012621760201c565b62000118635604e22560e01b6200017760201b620012621760201c565b5050506200043c565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160e01b03198082161415620001d65760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152600960205260409020805460ff19166001179055565b8280546200020990620003ff565b90600052602060002090601f0160209004810192826200022d576000855562000278565b82601f106200024857805160ff191683800117855562000278565b8280016001018555821562000278579182015b82811115620002785782518255916020019190600101906200025b565b50620002869291506200028a565b5090565b5b808211156200028657600081556001016200028b565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002c957600080fd5b81516001600160401b0380821115620002e657620002e6620002a1565b604051601f8301601f19908116603f01168101908282118183101715620003115762000311620002a1565b816040528381526020925086838588010111156200032e57600080fd5b600091505b8382101562000352578582018301518183018401529082019062000333565b83821115620003645760008385830101525b9695505050505050565b6000806000606084860312156200038457600080fd5b83516001600160401b03808211156200039c57600080fd5b620003aa87838801620002b7565b94506020860151915080821115620003c157600080fd5b620003cf87838801620002b7565b93506040860151915080821115620003e657600080fd5b50620003f586828701620002b7565b9150509250925092565b600181811c908216806200041457607f821691505b602082108114156200043657634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516126eb62000470600039600081816103530152610c7201526000818161032b0152610c4a01526126eb6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80635636c2d9116101045780638da5cb5b116100a2578063c87b56dd11610071578063c87b56dd146104c4578063d48e638a146104d7578063e985e9c5146104ea578063f2fde38b1461052657600080fd5b80638da5cb5b1461048557806395d89b4114610496578063a22cb4651461049e578063b88d4fde146104b157600080fd5b8063715018a6116100de578063715018a61461043c578063745a41bc1461044457806381981d2a1461045757806386cca6f81461046a57600080fd5b80635636c2d9146104035780636352211e1461041657806370a082311461042957600080fd5b80632a55205a1161017c5780633dd69c251161014b5780633dd69c25146103b757806340c10f19146103ca57806342842e0e146103dd57806346a53772146103f057600080fd5b80632a55205a146102a357806330adf81f146102d55780633644e515146102fc5780633adb52db146103a457600080fd5b8063095ea7b3116101b8578063095ea7b314610247578063141a468c1461025c578063212ae7641461027d57806323b872dd1461029057600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004612064565b610539565b60405190151581526020015b60405180910390f35b61020f61054a565b6040516101fe91906120d9565b61022f61022a3660046120ec565b6105dc565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004612121565b610676565b005b61026f61026a3660046120ec565b6107a8565b6040519081526020016101fe565b61025a61028b3660046121ee565b610846565b61025a61029e366004612285565b610866565b6102b66102b13660046122c1565b6108ed565b604080516001600160a01b0390931683526020830191909152016101fe565b61026f7f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad81565b61026f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b61025a6103b23660046122c1565b610924565b61025a6103c53660046122e3565b61098c565b61025a6103d8366004612121565b6109dd565b61025a6103eb366004612285565b6109e7565b61025a6103fe366004612331565b610a02565b61025a61041136600461234c565b610a27565b61022f6104243660046120ec565b610a3b565b61026f610437366004612331565b610ac6565b61025a610b60565b61025a6104523660046123a3565b610bc6565b61025a610465366004612404565b610f08565b600654600754604080519283526020830191909152016101fe565b600a546001600160a01b031661022f565b61020f610f2c565b61025a6104ac366004612476565b610f3b565b61025a6104bf3660046124b2565b610f46565b61020f6104d23660046120ec565b610fd4565b61022f6104e53660046120ec565b6110ff565b6101f26104f8366004612502565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61025a610534366004612331565b611180565b6000610544826112e1565b92915050565b60606000805461055990612535565b80601f016020809104026020016040519081016040528092919081815260200182805461058590612535565b80156105d25780601f106105a7576101008083540402835291602001916105d2565b820191906000526020600020905b8154815290600101906020018083116105b557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661065a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061068182610a3b565b9050806001600160a01b0316836001600160a01b0316141561070b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610651565b336001600160a01b0382161480610727575061072781336104f8565b6107995760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610651565b6107a38383611312565b505050565b6000818152600260205260408120546001600160a01b03166108325760405162461bcd60e51b815260206004820152602360248201527f6e6f6e6365733a20717565727920666f72206e6f6e6578697374656e7420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610651565b6000828152600d6020526040902054610544565b61085233858585610bc6565b61085e86868684611380565b505050505050565b61087033826113fe565b6108e25760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610651565b6107a38383836114f5565b6000806000600754600654856109039190612586565b61090d91906125a5565b9050610918856110ff565b925090505b9250929050565b600a546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610651565b6109888282611533565b5050565b61099a600b80546001019055565b60006109a5600b5490565b90506109b1838261156e565b6109bb8183611588565b600090815260086020526040902080546001600160a01b031916331790555050565b610988828261156e565b6107a383838360405180602001604052806000815250610f46565b610a10600b80546001019055565b6000610a1b600b5490565b9050610988828261156e565b610a31838361156e565b6107a38282611588565b6000818152600260205260408120546001600160a01b0316806105445760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610651565b60006001600160a01b038216610b445760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610651565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610bba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610651565b610bc460006115ec565b565b81421115610c165760405162461bcd60e51b815260206004820152600e60248201527f5065726d697420657870697265640000000000000000000000000000000000006044820152606401610651565b6000610d89610cc3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000868152600d60209081526040918290205482517f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad818401526001600160a01b038b1681850152606081018a9052608081019190915260a08082018990528351808303909101815260c0820184528051908301207f190100000000000000000000000000000000000000000000000000000000000060e083015260e2820194909452610102808201949094528251808203909401845261012201909152815191012090565b90506000610d97828461163e565b5090506000610da586610a3b565b90506001600160a01b038216610dfd5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610651565b806001600160a01b0316876001600160a01b03161415610e855760405162461bcd60e51b815260206004820152602760248201527f4552433732315065726d69743a20617070726f76616c20746f2063757272656e60448201527f74206f776e6572000000000000000000000000000000000000000000000000006064820152608401610651565b816001600160a01b0316816001600160a01b031614610ef557610ea98184866116ab565b610ef55760405162461bcd60e51b815260206004820152601a60248201527f4552433732315065726d69743a20756e617574686f72697a65640000000000006044820152606401610651565b610eff8787611312565b50505050505050565b610f25858585858560405180602001604052806000815250610846565b5050505050565b60606001805461055990612535565b610988338383611827565b610f5033836113fe565b610fc25760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610651565b610fce84848484611380565b50505050565b6000818152600260205260409020546060906001600160a01b03166110615760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610651565b6000828152600c60205260409020805461107a90612535565b80601f01602080910402602001604051908101604052809291908181526020018280546110a690612535565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b50505050509050919050565b6000818152600260205260408120546001600160a01b03166111635760405162461bcd60e51b815260206004820152601d60248201527f67657443726561746f723a206e6f6e6578697374656e7420746f6b656e0000006044820152606401610651565b6000828152600860205260409020546001600160a01b0316610544565b600a546001600160a01b031633146111da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610651565b6001600160a01b0381166112565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610651565b61125f816115ec565b50565b6001600160e01b031980821614156112bc5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610651565b6001600160e01b0319166000908152600960205260409020805460ff19166001179055565b60006112ec826118f6565b806105445750506001600160e01b03191660009081526009602052604090205460ff1690565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061134782610a3b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61138b8484846114f5565b61139784848484611991565b610fce5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610651565b6000818152600260205260408120546001600160a01b03166114775760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610651565b600061148283610a3b565b9050806001600160a01b0316846001600160a01b031614806114bd5750836001600160a01b03166114b2846105dc565b6001600160a01b0316145b806114ed57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b611500838383611ae9565b6001600160a01b038316156107a3576000818152600d60205260408120805491611529836125c7565b9190505550505050565b60068290556007819055604051819083907faf2bf5ffa0f4710dd8f6649727669c31ed788a40649ac78c9bc9c775a2d2d02890600090a35050565b610988828260405180602001604052806000815250611cb6565b6000828152600c6020908152604090912082516115a792840190611fb5565b50806040516115b691906125e2565b6040519081900381209083907fe9dd2c01379f6033709e315d41f1a58fcbd937ae2512da16462852d1082e7b7390600090a35050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808251604114156116755760208301516040840151606085015160001a61166987828585611d34565b9450945050505061091d565b82516040141561169f5760208301516040840151611694868383611e21565b93509350505061091d565b5060009050600261091d565b60008060006116ba858561163e565b909250905060008160048111156116d3576116d36125fe565b1480156116f15750856001600160a01b0316826001600160a01b0316145b1561170157600192505050611820565b600080876001600160a01b0316631626ba7e60e01b8888604051602401611729929190612614565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b031990941693909317909252905161177c91906125e2565b600060405180830381855afa9150503d80600081146117b7576040519150601f19603f3d011682016040523d82523d6000602084013e6117bc565b606091505b50915091508180156117cf575080516020145b8015611819575080517f1626ba7e000000000000000000000000000000000000000000000000000000009061180d908301602090810190840161262d565b6001600160e01b031916145b9450505050505b9392505050565b816001600160a01b0316836001600160a01b031614156118895760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610651565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061195957506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061054457507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610544565b60006001600160a01b0384163b15611ade57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119d590339089908890889060040161264a565b602060405180830381600087803b1580156119ef57600080fd5b505af1925050508015611a1f575060408051601f3d908101601f19168201909252611a1c9181019061262d565b60015b611ac4573d808015611a4d576040519150601f19603f3d011682016040523d82523d6000602084013e611a52565b606091505b508051611abc5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610651565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114ed565b506001949350505050565b826001600160a01b0316611afc82610a3b565b6001600160a01b031614611b785760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610651565b6001600160a01b038216611bf35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610651565b611bfe600082611312565b6001600160a01b0383166000908152600360205260408120805460019290611c27908490612686565b90915550506001600160a01b0382166000908152600360205260408120805460019290611c5590849061269d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611cc08383611e73565b611ccd6000848484611991565b6107a35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610651565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611d6b5750600090506003611e18565b8460ff16601b14158015611d8357508460ff16601c14155b15611d945750600090506004611e18565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611de8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611e1157600060019250925050611e18565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681611e5760ff86901c601b61269d565b9050611e6587828885611d34565b935093505050935093915050565b6001600160a01b038216611ec95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610651565b6000818152600260205260409020546001600160a01b031615611f2e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610651565b6001600160a01b0382166000908152600360205260408120805460019290611f5790849061269d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611fc190612535565b90600052602060002090601f016020900481019282611fe35760008555612029565b82601f10611ffc57805160ff1916838001178555612029565b82800160010185558215612029579182015b8281111561202957825182559160200191906001019061200e565b50612035929150612039565b5090565b5b80821115612035576000815560010161203a565b6001600160e01b03198116811461125f57600080fd5b60006020828403121561207657600080fd5b81356118208161204e565b60005b8381101561209c578181015183820152602001612084565b83811115610fce5750506000910152565b600081518084526120c5816020860160208601612081565b601f01601f19169290920160200192915050565b60208152600061182060208301846120ad565b6000602082840312156120fe57600080fd5b5035919050565b80356001600160a01b038116811461211c57600080fd5b919050565b6000806040838503121561213457600080fd5b61213d83612105565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261217257600080fd5b813567ffffffffffffffff8082111561218d5761218d61214b565b604051601f8301601f19908116603f011681019082821181831017156121b5576121b561214b565b816040528381528660208588010111156121ce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060c0878903121561220757600080fd5b61221087612105565b955061221e60208801612105565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561224957600080fd5b6122558a838b01612161565b935060a089013591508082111561226b57600080fd5b5061227889828a01612161565b9150509295509295509295565b60008060006060848603121561229a57600080fd5b6122a384612105565b92506122b160208501612105565b9150604084013590509250925092565b600080604083850312156122d457600080fd5b50508035926020909101359150565b600080604083850312156122f657600080fd5b6122ff83612105565b9150602083013567ffffffffffffffff81111561231b57600080fd5b61232785828601612161565b9150509250929050565b60006020828403121561234357600080fd5b61182082612105565b60008060006060848603121561236157600080fd5b61236a84612105565b925060208401359150604084013567ffffffffffffffff81111561238d57600080fd5b61239986828701612161565b9150509250925092565b600080600080608085870312156123b957600080fd5b6123c285612105565b93506020850135925060408501359150606085013567ffffffffffffffff8111156123ec57600080fd5b6123f887828801612161565b91505092959194509250565b600080600080600060a0868803121561241c57600080fd5b61242586612105565b945061243360208701612105565b93506040860135925060608601359150608086013567ffffffffffffffff81111561245d57600080fd5b61246988828901612161565b9150509295509295909350565b6000806040838503121561248957600080fd5b61249283612105565b9150602083013580151581146124a757600080fd5b809150509250929050565b600080600080608085870312156124c857600080fd5b6124d185612105565b93506124df60208601612105565b925060408501359150606085013567ffffffffffffffff8111156123ec57600080fd5b6000806040838503121561251557600080fd5b61251e83612105565b915061252c60208401612105565b90509250929050565b600181811c9082168061254957607f821691505b6020821081141561256a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125a0576125a0612570565b500290565b6000826125c257634e487b7160e01b600052601260045260246000fd5b500490565b60006000198214156125db576125db612570565b5060010190565b600082516125f4818460208701612081565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b8281526040602082015260006114ed60408301846120ad565b60006020828403121561263f57600080fd5b81516118208161204e565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261267c60808301846120ad565b9695505050505050565b60008282101561269857612698612570565b500390565b600082198211156126b0576126b0612570565b50019056fea2646970667358221220af9c56a23f3907c5a87b3ed678ac7828e3456259e35832689c8a99489a2b196764736f6c63430008090033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockERC721";
  }

  deploy(
    name: string,
    symbol: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC721> {
    return super.deploy(
      name,
      symbol,
      version,
      overrides || {}
    ) as Promise<MockERC721>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    version: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, version, overrides || {});
  }
  attach(address: string): MockERC721 {
    return super.attach(address) as MockERC721;
  }
  connect(signer: Signer): MockERC721__factory {
    return super.connect(signer) as MockERC721__factory;
  }
  static readonly contractName: "MockERC721";
  public readonly contractName: "MockERC721";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new utils.Interface(_abi) as MockERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721 {
    return new Contract(address, _abi, signerOrProvider) as MockERC721;
  }
}
