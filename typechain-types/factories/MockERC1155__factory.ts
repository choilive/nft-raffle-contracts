/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockERC1155, MockERC1155Interface } from "../MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "scale",
        type: "uint256",
      },
    ],
    name: "RoyaltyRateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRoyaltyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "mintBatchWithAutoTokenIdAndUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "mintBatchWithAutoid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "mintBatchWithUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintWithAutoTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mintWithUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mintWithUriAutoTokenId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_scale",
        type: "uint256",
      },
    ],
    name: "setRoyaltyRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610bb8600355620186a06004553480156200001e57600080fd5b50604080516020810190915260008152620000398162000097565b506200005763152a902d60e11b620000b060201b62000cd61760201c565b62000074636cdb3d1360e11b620000b060201b62000cd61760201c565b620000916303a24d0760e21b620000b060201b62000cd61760201c565b62000217565b8051620000ac90600290602084019062000134565b5050565b6001600160e01b031980821614156200010f5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152600660205260409020805460ff19166001179055565b8280546200014290620001da565b90600052602060002090601f016020900481019282620001665760008555620001b1565b82601f106200018157805160ff1916838001178555620001b1565b82800160010185558215620001b1579182015b82811115620001b157825182559160200191906001019062000194565b50620001bf929150620001c3565b5090565b5b80821115620001bf5760008155600101620001c4565b600181811c90821680620001ef57607f821691505b602082108114156200021157634e487b7160e01b600052602260045260246000fd5b50919050565b6124c680620002276000396000f3fe608060405234801561001057600080fd5b506004361061016b5760003560e01c80638b7a4b8c116100cd578063d08e372111610081578063e0ba74a611610066578063e0ba74a614610347578063e985e9c51461035a578063f242432a1461039657600080fd5b8063d08e3721146102f3578063d48e638a1461030657600080fd5b8063a22cb465116100b2578063a22cb465146102ba578063aa97f578146102cd578063af21da91146102e057600080fd5b80638b7a4b8c14610294578063985cdde7146102a757600080fd5b80632eb2c2d6116101245780634e1273f4116101095780634e1273f414610246578063571286831461026657806386cca6f81461027957600080fd5b80632eb2c2d6146102205780633adb52db1461023357600080fd5b80630e89341c116101555780630e89341c146101b9578063156e29f6146101d95780632a55205a146101ee57600080fd5b8062fdd58e1461017057806301ffc9a714610196575b600080fd5b61018361017e366004611a39565b6103a9565b6040519081526020015b60405180910390f35b6101a96101a4366004611a7c565b610452565b604051901515815260200161018d565b6101cc6101c7366004611aa0565b610463565b60405161018d9190611b06565b6101ec6101e7366004611b19565b610505565b005b6102016101fc366004611b4c565b610525565b604080516001600160a01b03909316835260208301919091520161018d565b6101ec61022e366004611cba565b610566565b6101ec610241366004611b4c565b610608565b610259610254366004611dd1565b610616565b60405161018d9190611e70565b6101ec610274366004611e83565b610754565b6003546004546040805192835260208301919091520161018d565b6101ec6102a2366004611f96565b61083c565b6101ec6102b5366004611a39565b6109f4565b6101ec6102c8366004612000565b610a2a565b6101ec6102db36600461203c565b610a35565b6101ec6102ee366004611dd1565b610b36565b6101ec6103013660046120e9565b610ba0565b61032f610314366004611aa0565b6000908152600560205260409020546001600160a01b031690565b6040516001600160a01b03909116815260200161018d565b6101ec610355366004612136565b610c16565b6101a961036836600461218b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101ec6103a43660046121be565b610c3b565b60006001600160a01b03831661042c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b600061045d82610d55565b92915050565b600081815260086020526040902080546060919061048090612223565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90612223565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b50505050509050919050565b61052083838360405180602001604052806000815250610d86565b505050565b60008060006004546003548561053b9190612274565b6105459190612293565b600095865260056020526040909520546001600160a01b0316959350505050565b6001600160a01b03851633148061058257506105828533610368565b6105f45760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610423565b6106018585858585610e90565b5050505050565b61061282826110ee565b5050565b6060815183511461068f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610423565b6000835167ffffffffffffffff8111156106ab576106ab611b6e565b6040519080825280602002602001820160405280156106d4578160200160208202803683370190505b50905060005b845181101561074c5761071f8582815181106106f8576106f86122b5565b6020026020010151858381518110610712576107126122b5565b60200260200101516103a9565b828281518110610731576107316122b5565b6020908102919091010152610745816122cb565b90506106da565b509392505050565b81518351148015610766575080518251145b6107b25760405162461bcd60e51b815260206004820152601a60248201527f6d696e743a6172726179206c656e677468206d69736d617463680000000000006044820152606401610423565b60005b8351811015610836576108248482815181106107d3576107d36122b5565b60200260200101518483815181106107ed576107ed6122b5565b6020026020010151848481518110610807576108076122b5565b602002602001015160405180602001604052806000815250610d86565b8061082e816122cb565b9150506107b5565b50505050565b805182511461088d5760405162461bcd60e51b815260206004820152601d60248201527f617272617973206d757374206861766520657175616c206c656e6774680000006044820152606401610423565b6000825167ffffffffffffffff8111156108a9576108a9611b6e565b6040519080825280602002602001820160405280156108d2578160200160208202803683370190505b50905060005b835181101561092d576108ef600780546001019055565b60006108fa60075490565b90508083838151811061090f5761090f6122b5565b60209081029190910101525080610925816122cb565b9150506108d8565b5061094984828560405180602001604052806000815250611129565b60005b835181101561060157336005600084848151811061096c5761096c6122b5565b6020026020010151815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506109e28282815181106109bb576109bb6122b5565b60200260200101518483815181106109d5576109d56122b5565b60200260200101516112ef565b806109ec816122cb565b91505061094c565b610a02600780546001019055565b6000610a0d60075490565b905061052083828460405180602001604052806000815250610d86565b61061233838361134b565b82518451148015610a47575081518351145b8015610a54575080518251145b610aa05760405162461bcd60e51b815260206004820152601a60248201527f6d696e743a6172726179206c656e677468206d69736d617463680000000000006044820152606401610423565b60005b845181101561060157610af5858281518110610ac157610ac16122b5565b6020026020010151858381518110610adb57610adb6122b5565b6020026020010151858481518110610807576108076122b5565b610b24848281518110610b0a57610b0a6122b5565b60200260200101518383815181106109d5576109d56122b5565b80610b2e816122cb565b915050610aa3565b60005b825181101561052057610b50600780546001019055565b6000610b5b60075490565b9050610b8d848381518110610b7257610b726122b5565b602002602001015182858581518110610807576108076122b5565b5080610b98816122cb565b915050610b39565b610bae600780546001019055565b6000610bb960075490565b9050610bd684828560405180602001604052806000815250610d86565b600081815260056020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317905561083681836112ef565b610c3184848460405180602001604052806000815250610d86565b61083683826112ef565b6001600160a01b038516331480610c575750610c578533610368565b610cc95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610423565b6106018585858585611440565b6001600160e01b03198082161415610d305760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610423565b6001600160e01b0319166000908152600660205260409020805460ff19166001179055565b6000610d60826115de565b8061045d5750506001600160e01b03191660009081526006602052604090205460ff1690565b6001600160a01b038416610de65760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610423565b33610e0081600087610df788611679565b61060188611679565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610e309084906122e6565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610601816000878787876116c4565b8151835114610ef25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610423565b6001600160a01b038416610f565760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610423565b3360005b8451811015611080576000858281518110610f7757610f776122b5565b602002602001015190506000858381518110610f9557610f956122b5565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156110285760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610423565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906110659084906122e6565b9250508190555050505080611079906122cb565b9050610f5a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110d09291906122fe565b60405180910390a46110e6818787878787611879565b505050505050565b60038290556004819055604051819083907faf2bf5ffa0f4710dd8f6649727669c31ed788a40649ac78c9bc9c775a2d2d02890600090a35050565b6001600160a01b0384166111895760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610423565b81518351146111eb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610423565b3360005b84518110156112875783818151811061120a5761120a6122b5565b6020026020010151600080878481518110611227576112276122b5565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461126f91906122e6565b9091555081905061127f816122cb565b9150506111ef565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112d89291906122fe565b60405180910390a461060181600087878787611879565b6000828152600860209081526040909120825161130e92840190611984565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b8260405161133f9190611b06565b60405180910390a25050565b816001600160a01b0316836001600160a01b031614156113d35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610423565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166114a45760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610423565b336114b4818787610df788611679565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156115385760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610423565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906115759084906122e6565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46115d58288888888886116c4565b50505050505050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061164157506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061045d57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b031983161461045d565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106116b3576116b36122b5565b602090810291909101015292915050565b6001600160a01b0384163b156110e65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611708908990899088908890889060040161232c565b602060405180830381600087803b15801561172257600080fd5b505af1925050508015611752575060408051601f3d908101601f1916820190925261174f9181019061236f565b60015b6118085761175e61238c565b806308c379a0141561179857506117736123a8565b8061177e575061179a565b8060405162461bcd60e51b81526004016104239190611b06565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610423565b6001600160e01b0319811663f23a6e6160e01b146115d55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610423565b6001600160a01b0384163b156110e65760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906118bd9089908990889088908890600401612432565b602060405180830381600087803b1580156118d757600080fd5b505af1925050508015611907575060408051601f3d908101601f191682019092526119049181019061236f565b60015b6119135761175e61238c565b6001600160e01b0319811663bc197c8160e01b146115d55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610423565b82805461199090612223565b90600052602060002090601f0160209004810192826119b257600085556119f8565b82601f106119cb57805160ff19168380011785556119f8565b828001600101855582156119f8579182015b828111156119f85782518255916020019190600101906119dd565b50611a04929150611a08565b5090565b5b80821115611a045760008155600101611a09565b80356001600160a01b0381168114611a3457600080fd5b919050565b60008060408385031215611a4c57600080fd5b611a5583611a1d565b946020939093013593505050565b6001600160e01b031981168114611a7957600080fd5b50565b600060208284031215611a8e57600080fd5b8135611a9981611a63565b9392505050565b600060208284031215611ab257600080fd5b5035919050565b6000815180845260005b81811015611adf57602081850181015186830182015201611ac3565b81811115611af1576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a996020830184611ab9565b600080600060608486031215611b2e57600080fd5b611b3784611a1d565b95602085013595506040909401359392505050565b60008060408385031215611b5f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611baa57611baa611b6e565b6040525050565b600067ffffffffffffffff821115611bcb57611bcb611b6e565b5060051b60200190565b600082601f830112611be657600080fd5b81356020611bf382611bb1565b604051611c008282611b84565b83815260059390931b8501820192828101915086841115611c2057600080fd5b8286015b84811015611c3b5780358352918301918301611c24565b509695505050505050565b600082601f830112611c5757600080fd5b813567ffffffffffffffff811115611c7157611c71611b6e565b604051611c88601f8301601f191660200182611b84565b818152846020838601011115611c9d57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611cd257600080fd5b611cdb86611a1d565b9450611ce960208701611a1d565b9350604086013567ffffffffffffffff80821115611d0657600080fd5b611d1289838a01611bd5565b94506060880135915080821115611d2857600080fd5b611d3489838a01611bd5565b93506080880135915080821115611d4a57600080fd5b50611d5788828901611c46565b9150509295509295909350565b600082601f830112611d7557600080fd5b81356020611d8282611bb1565b604051611d8f8282611b84565b83815260059390931b8501820192828101915086841115611daf57600080fd5b8286015b84811015611c3b57611dc481611a1d565b8352918301918301611db3565b60008060408385031215611de457600080fd5b823567ffffffffffffffff80821115611dfc57600080fd5b611e0886838701611d64565b93506020850135915080821115611e1e57600080fd5b50611e2b85828601611bd5565b9150509250929050565b600081518084526020808501945080840160005b83811015611e6557815187529582019590820190600101611e49565b509495945050505050565b602081526000611a996020830184611e35565b600080600060608486031215611e9857600080fd5b833567ffffffffffffffff80821115611eb057600080fd5b611ebc87838801611d64565b94506020860135915080821115611ed257600080fd5b611ede87838801611bd5565b93506040860135915080821115611ef457600080fd5b50611f0186828701611bd5565b9150509250925092565b600082601f830112611f1c57600080fd5b81356020611f2982611bb1565b604051611f368282611b84565b83815260059390931b8501820192828101915086841115611f5657600080fd5b8286015b84811015611c3b57803567ffffffffffffffff811115611f7a5760008081fd5b611f888986838b0101611c46565b845250918301918301611f5a565b600080600060608486031215611fab57600080fd5b611fb484611a1d565b9250602084013567ffffffffffffffff80821115611fd157600080fd5b611fdd87838801611bd5565b93506040860135915080821115611ff357600080fd5b50611f0186828701611f0b565b6000806040838503121561201357600080fd5b61201c83611a1d565b91506020830135801515811461203157600080fd5b809150509250929050565b6000806000806080858703121561205257600080fd5b843567ffffffffffffffff8082111561206a57600080fd5b61207688838901611d64565b9550602087013591508082111561208c57600080fd5b61209888838901611bd5565b945060408701359150808211156120ae57600080fd5b6120ba88838901611bd5565b935060608701359150808211156120d057600080fd5b506120dd87828801611f0b565b91505092959194509250565b6000806000606084860312156120fe57600080fd5b61210784611a1d565b925060208401359150604084013567ffffffffffffffff81111561212a57600080fd5b611f0186828701611c46565b6000806000806080858703121561214c57600080fd5b61215585611a1d565b93506020850135925060408501359150606085013567ffffffffffffffff81111561217f57600080fd5b6120dd87828801611c46565b6000806040838503121561219e57600080fd5b6121a783611a1d565b91506121b560208401611a1d565b90509250929050565b600080600080600060a086880312156121d657600080fd5b6121df86611a1d565b94506121ed60208701611a1d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561221757600080fd5b611d5788828901611c46565b600181811c9082168061223757607f821691505b6020821081141561225857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561228e5761228e61225e565b500290565b6000826122b057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006000198214156122df576122df61225e565b5060010190565b600082198211156122f9576122f961225e565b500190565b6040815260006123116040830185611e35565b82810360208401526123238185611e35565b95945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261236460a0830184611ab9565b979650505050505050565b60006020828403121561238157600080fd5b8151611a9981611a63565b600060033d11156123a55760046000803e5060005160e01c5b90565b600060443d10156123b65790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156123e657505050505090565b82850191508151818111156123fe5750505050505090565b843d87010160208285010111156124185750505050505090565b61242760208286010187611b84565b509095945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261245e60a0830186611e35565b82810360608401526124708186611e35565b905082810360808401526124848185611ab9565b9897505050505050505056fea2646970667358221220f517725507420924b03cec9549afae6ceddf4cd8cc53f2d1c51f3702b413316664736f6c63430008090033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockERC1155";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }
  static readonly contractName: "MockERC1155";
  public readonly contractName: "MockERC1155";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
