/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestUSDC, TestUSDCInterface } from "../TestUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610140523480156200003757600080fd5b5060405162001586380380620015868339810160408190526200005a91620003bf565b8280604051806040016040528060018152602001603160f81b81525085858160039080519060200190620000909291906200024c565b508051620000a69060049060208401906200024c565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909601209052929092526101205250620001469050338262000175565b60405181815233903090600080516020620015668339815191529060200160405180910390a350505062000496565b6001600160a01b038216620001d05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001e4919062000432565b90915550506001600160a01b038216600090815260208190526040812080548392906200021390849062000432565b90915550506040518181526001600160a01b03831690600090600080516020620015668339815191529060200160405180910390a35050565b8280546200025a9062000459565b90600052602060002090601f0160209004810192826200027e5760008555620002c9565b82601f106200029957805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c9578251825591602001919060010190620002ac565b50620002d7929150620002db565b5090565b5b80821115620002d75760008155600101620002dc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200031a57600080fd5b81516001600160401b0380821115620003375762000337620002f2565b604051601f8301601f19908116603f01168101908282118183101715620003625762000362620002f2565b816040528381526020925086838588010111156200037f57600080fd5b600091505b83821015620003a3578582018301518183018401529082019062000384565b83821115620003b55760008385830101525b9695505050505050565b600080600060608486031215620003d557600080fd5b83516001600160401b0380821115620003ed57600080fd5b620003fb8783880162000308565b945060208601519150808211156200041257600080fd5b50620004218682870162000308565b925050604084015190509250925092565b600082198211156200045457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200046e57607f821691505b602082108114156200049057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161014051611075620004f1600039600061049301526000610a2e01526000610a7d01526000610a58015260006109b1015260006109db01526000610a0501526110756000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101c3578063a9059cbb146101d6578063d505accf146101e9578063dd62ed3e146101fe57600080fd5b806370a082311461017f5780637ecebe00146101a857806395d89b41146101bb57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce567146101555780633644e51514610164578063395093511461016c57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610237565b6040516101049190610e2f565b60405180910390f35b61012061011b366004610ea0565b6102c9565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610eca565b6102e1565b60405160128152602001610104565b610134610305565b61012061017a366004610ea0565b610314565b61013461018d366004610f06565b6001600160a01b031660009081526020819052604090205490565b6101346101b6366004610f06565b610353565b6100f7610373565b6101206101d1366004610ea0565b610382565b6101206101e4366004610ea0565b610431565b6101fc6101f7366004610f28565b61043f565b005b61013461020c366004610f9b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024690610fce565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610fce565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d78185856105a3565b5060019392505050565b6000336102ef8582856106fb565b6102fa85858561078d565b506001949350505050565b600061030f6109a4565b905090565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102d7908290869061034e908790611003565b6105a3565b6001600160a01b0381166000908152600560205260408120545b92915050565b60606004805461024690610fce565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102fa82868684036105a3565b6000336102d781858561078d565b8342111561048f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161041b565b60007f00000000000000000000000000000000000000000000000000000000000000008888886104be8c610acb565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061051982610af3565b9050600061052982878787610b5c565b9050896001600160a01b0316816001600160a01b03161461058c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161041b565b6105978a8a8a6105a3565b50505050505050505050565b6001600160a01b03831661061e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b03821661069a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610787578181101561077a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161041b565b61078784848484036105a3565b50505050565b6001600160a01b0383166108095760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b0382166108855760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b038316600090815260208190526040902054818110156109145760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161041b565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061094b908490611003565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161099791815260200190565b60405180910390a3610787565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109fd57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a2757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061036d610b006109a4565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b6d87878787610b84565b91509150610b7a81610c71565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610bbb5750600090506003610c68565b8460ff16601b14158015610bd357508460ff16601c14155b15610be45750600090506004610c68565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c38573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c6157600060019250925050610c68565b9150600090505b94509492505050565b6000816004811115610c8557610c85611029565b1415610c8e5750565b6001816004811115610ca257610ca2611029565b1415610cf05760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161041b565b6002816004811115610d0457610d04611029565b1415610d525760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161041b565b6003816004811115610d6657610d66611029565b1415610dbf5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161041b565b6004816004811115610dd357610dd3611029565b1415610e2c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161041b565b50565b600060208083528351808285015260005b81811015610e5c57858101830151858201604001528201610e40565b81811115610e6e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e9b57600080fd5b919050565b60008060408385031215610eb357600080fd5b610ebc83610e84565b946020939093013593505050565b600080600060608486031215610edf57600080fd5b610ee884610e84565b9250610ef660208501610e84565b9150604084013590509250925092565b600060208284031215610f1857600080fd5b610f2182610e84565b9392505050565b600080600080600080600060e0888a031215610f4357600080fd5b610f4c88610e84565b9650610f5a60208901610e84565b95506040880135945060608801359350608088013560ff81168114610f7e57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610fae57600080fd5b610fb783610e84565b9150610fc560208401610e84565b90509250929050565b600181811c90821680610fe257607f821691505b60208210811415610aed57634e487b7160e01b600052602260045260246000fd5b6000821982111561102457634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204fe77d6d8db741fbbf77d0e6d377139a5ea68953b2b77f99d9c301be41292ff364736f6c634300080b0033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type TestUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUSDC__factory extends ContractFactory {
  constructor(...args: TestUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestUSDC";
  }

  deploy(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUSDC> {
    return super.deploy(
      name_,
      symbol_,
      totalSupply_,
      overrides || {}
    ) as Promise<TestUSDC>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    totalSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      totalSupply_,
      overrides || {}
    );
  }
  attach(address: string): TestUSDC {
    return super.attach(address) as TestUSDC;
  }
  connect(signer: Signer): TestUSDC__factory {
    return super.connect(signer) as TestUSDC__factory;
  }
  static readonly contractName: "TestUSDC";
  public readonly contractName: "TestUSDC";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUSDCInterface {
    return new utils.Interface(_abi) as TestUSDCInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUSDC {
    return new Contract(address, _abi, signerOrProvider) as TestUSDC;
  }
}
