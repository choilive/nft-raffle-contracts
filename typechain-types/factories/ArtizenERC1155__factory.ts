/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ArtizenERC1155,
  ArtizenERC1155Interface,
} from "../ArtizenERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "mintBatchWithUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "mintWithUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200006d565b506200004a636cdb3d1360e11b6200008660201b6200076a1760201c565b620000676303a24d0760e21b6200008660201b6200076a1760201c565b620001ed565b8051620000829060029060208401906200010a565b5050565b6001600160e01b03198082161415620000e55760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152600360205260409020805460ff19166001179055565b8280546200011890620001b0565b90600052602060002090601f0160209004810192826200013c576000855562000187565b82601f106200015757805160ff191683800117855562000187565b8280016001018555821562000187579182015b82811115620001875782518255916020019190600101906200016a565b506200019592915062000199565b5090565b5b808211156200019557600081556001016200019a565b600181811c90821680620001c557607f821691505b60208210811415620001e757634e487b7160e01b600052602260045260246000fd5b50919050565b611db280620001fd6000396000f3fe608060405234801561001057600080fd5b50600436106100d35760003560e01c8063a22cb46511610081578063e0ba74a61161005b578063e0ba74a6146101c2578063e985e9c5146101d5578063f242432a1461021157600080fd5b8063a22cb46514610189578063aa97f5781461019c578063b48ab8b6146101af57600080fd5b80632eb2c2d6116100b25780632eb2c2d6146101415780634e1273f414610156578063731133e91461017657600080fd5b8062fdd58e146100d857806301ffc9a7146100fe5780630e89341c14610121575b600080fd5b6100eb6100e6366004611474565b610224565b6040519081526020015b60405180910390f35b61011161010c3660046114b7565b6102cd565b60405190151581526020016100f5565b61013461012f3660046114db565b6102de565b6040516100f59190611541565b61015461014f3660046116a0565b610372565b005b6101696101643660046117b7565b610414565b6040516100f59190611856565b610154610184366004611869565b610552565b6101546101973660046118ca565b610564565b6101546101aa366004611906565b610573565b6101546101bd366004611a2b565b61069e565b6101546101d0366004611869565b6106aa565b6101116101e3366004611ab8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61015461021f366004611aeb565b6106cf565b60006001600160a01b0383166102a75760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006102d8826107e9565b92915050565b6060600280546102ed90611b50565b80601f016020809104026020016040519081016040528092919081815260200182805461031990611b50565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b50505050509050919050565b6001600160a01b03851633148061038e575061038e85336101e3565b6104005760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161029e565b61040d858585858561081a565b5050505050565b6060815183511461048d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161029e565b6000835167ffffffffffffffff8111156104a9576104a9611554565b6040519080825280602002602001820160405280156104d2578160200160208202803683370190505b50905060005b845181101561054a5761051d8582815181106104f6576104f6611b8b565b602002602001015185838151811061051057610510611b8b565b6020026020010151610224565b82828151811061052f5761052f611b8b565b602090810291909101015261054381611bb7565b90506104d8565b509392505050565b61055e84848484610a78565b50505050565b61056f338383610b82565b5050565b82518451148015610585575081518351145b8015610592575080518251145b6105de5760405162461bcd60e51b815260206004820152601a60248201527f6d696e743a6172726179206c656e677468206d69736d61746368000000000000604482015260640161029e565b60005b845181101561040d576106508582815181106105ff576105ff611b8b565b602002602001015185838151811061061957610619611b8b565b602002602001015185848151811061063357610633611b8b565b602002602001015160405180602001604052806000815250610a78565b61068c84828151811061066557610665611b8b565b602002602001015183838151811061067f5761067f611b8b565b6020026020010151610c77565b8061069681611bb7565b9150506105e1565b61055e84848484610cd3565b6106c584848460405180602001604052806000815250610a78565b61055e8382610c77565b6001600160a01b0385163314806106eb57506106eb85336101e3565b61075d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161029e565b61040d8585858585610e99565b6001600160e01b031980821614156107c45760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640161029e565b6001600160e01b0319166000908152600360205260409020805460ff19166001179055565b60006107f482611037565b806102d85750506001600160e01b03191660009081526003602052604090205460ff1690565b815183511461087c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161029e565b6001600160a01b0384166108e05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161029e565b3360005b8451811015610a0a57600085828151811061090157610901611b8b565b60200260200101519050600085838151811061091f5761091f611b8b565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109b25760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161029e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109ef908490611bd2565b9250508190555050505080610a0390611bb7565b90506108e4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a5a929190611bea565b60405180910390a4610a708187878787876110d2565b505050505050565b6001600160a01b038416610ad85760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161029e565b33610af281600087610ae988611278565b61040d88611278565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b22908490611bd2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461040d816000878787876112c3565b816001600160a01b0316836001600160a01b03161415610c0a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161029e565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008281526004602090815260409091208251610c96928401906113bf565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b82604051610cc79190611541565b60405180910390a25050565b6001600160a01b038416610d335760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161029e565b8151835114610d955760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161029e565b3360005b8451811015610e3157838181518110610db457610db4611b8b565b6020026020010151600080878481518110610dd157610dd1611b8b565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610e199190611bd2565b90915550819050610e2981611bb7565b915050610d99565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610e82929190611bea565b60405180910390a461040d816000878787876110d2565b6001600160a01b038416610efd5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161029e565b33610f0d818787610ae988611278565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610f915760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161029e565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610fce908490611bd2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461102e8288888888886112c3565b50505050505050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061109a57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b806102d857507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146102d8565b6001600160a01b0384163b15610a705760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111169089908990889088908890600401611c18565b6020604051808303816000875af1925050508015611151575060408051601f3d908101601f1916820190925261114e91810190611c76565b60015b6112075761115d611c93565b806308c379a014156111975750611172611caf565b8061117d5750611199565b8060405162461bcd60e51b815260040161029e9190611541565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161029e565b6001600160e01b0319811663bc197c8160e01b1461102e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161029e565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106112b2576112b2611b8b565b602090810291909101015292915050565b6001600160a01b0384163b15610a705760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113079089908990889088908890600401611d39565b6020604051808303816000875af1925050508015611342575060408051601f3d908101601f1916820190925261133f91810190611c76565b60015b61134e5761115d611c93565b6001600160e01b0319811663f23a6e6160e01b1461102e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161029e565b8280546113cb90611b50565b90600052602060002090601f0160209004810192826113ed5760008555611433565b82601f1061140657805160ff1916838001178555611433565b82800160010185558215611433579182015b82811115611433578251825591602001919060010190611418565b5061143f929150611443565b5090565b5b8082111561143f5760008155600101611444565b80356001600160a01b038116811461146f57600080fd5b919050565b6000806040838503121561148757600080fd5b61149083611458565b946020939093013593505050565b6001600160e01b0319811681146114b457600080fd5b50565b6000602082840312156114c957600080fd5b81356114d48161149e565b9392505050565b6000602082840312156114ed57600080fd5b5035919050565b6000815180845260005b8181101561151a576020818501810151868301820152016114fe565b8181111561152c576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006114d460208301846114f4565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561159057611590611554565b6040525050565b600067ffffffffffffffff8211156115b1576115b1611554565b5060051b60200190565b600082601f8301126115cc57600080fd5b813560206115d982611597565b6040516115e6828261156a565b83815260059390931b850182019282810191508684111561160657600080fd5b8286015b84811015611621578035835291830191830161160a565b509695505050505050565b600082601f83011261163d57600080fd5b813567ffffffffffffffff81111561165757611657611554565b60405161166e601f8301601f19166020018261156a565b81815284602083860101111561168357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156116b857600080fd5b6116c186611458565b94506116cf60208701611458565b9350604086013567ffffffffffffffff808211156116ec57600080fd5b6116f889838a016115bb565b9450606088013591508082111561170e57600080fd5b61171a89838a016115bb565b9350608088013591508082111561173057600080fd5b5061173d8882890161162c565b9150509295509295909350565b600082601f83011261175b57600080fd5b8135602061176882611597565b604051611775828261156a565b83815260059390931b850182019282810191508684111561179557600080fd5b8286015b84811015611621576117aa81611458565b8352918301918301611799565b600080604083850312156117ca57600080fd5b823567ffffffffffffffff808211156117e257600080fd5b6117ee8683870161174a565b9350602085013591508082111561180457600080fd5b50611811858286016115bb565b9150509250929050565b600081518084526020808501945080840160005b8381101561184b5781518752958201959082019060010161182f565b509495945050505050565b6020815260006114d4602083018461181b565b6000806000806080858703121561187f57600080fd5b61188885611458565b93506020850135925060408501359150606085013567ffffffffffffffff8111156118b257600080fd5b6118be8782880161162c565b91505092959194509250565b600080604083850312156118dd57600080fd5b6118e683611458565b9150602083013580151581146118fb57600080fd5b809150509250929050565b6000806000806080858703121561191c57600080fd5b843567ffffffffffffffff8082111561193457600080fd5b6119408883890161174a565b955060209150818701358181111561195757600080fd5b61196389828a016115bb565b95505060408701358181111561197857600080fd5b61198489828a016115bb565b94505060608701358181111561199957600080fd5b8701601f810189136119aa57600080fd5b80356119b581611597565b6040516119c2828261156a565b82815260059290921b830185019185810191508b8311156119e257600080fd5b8584015b83811015611a1a578035868111156119fe5760008081fd5b611a0c8e898389010161162c565b8452509186019186016119e6565b50989b979a50959850505050505050565b60008060008060808587031215611a4157600080fd5b611a4a85611458565b9350602085013567ffffffffffffffff80821115611a6757600080fd5b611a73888389016115bb565b94506040870135915080821115611a8957600080fd5b611a95888389016115bb565b93506060870135915080821115611aab57600080fd5b506118be8782880161162c565b60008060408385031215611acb57600080fd5b611ad483611458565b9150611ae260208401611458565b90509250929050565b600080600080600060a08688031215611b0357600080fd5b611b0c86611458565b9450611b1a60208701611458565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b4457600080fd5b61173d8882890161162c565b600181811c90821680611b6457607f821691505b60208210811415611b8557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bcb57611bcb611ba1565b5060010190565b60008219821115611be557611be5611ba1565b500190565b604081526000611bfd604083018561181b565b8281036020840152611c0f818561181b565b95945050505050565b60006001600160a01b03808816835280871660208401525060a06040830152611c4460a083018661181b565b8281036060840152611c56818661181b565b90508281036080840152611c6a81856114f4565b98975050505050505050565b600060208284031215611c8857600080fd5b81516114d48161149e565b600060033d1115611cac5760046000803e5060005160e01c5b90565b600060443d1015611cbd5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611ced57505050505090565b8285019150815181811115611d055750505050505090565b843d8701016020828501011115611d1f5750505050505090565b611d2e6020828601018761156a565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611d7160a08301846114f4565b97965050505050505056fea264697066735822122008025e4096bed6e7157de11011b04c98185b52839a8a8c367a61520f2f1df1a364736f6c634300080b0033";

type ArtizenERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArtizenERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArtizenERC1155__factory extends ContractFactory {
  constructor(...args: ArtizenERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ArtizenERC1155";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArtizenERC1155> {
    return super.deploy(overrides || {}) as Promise<ArtizenERC1155>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArtizenERC1155 {
    return super.attach(address) as ArtizenERC1155;
  }
  connect(signer: Signer): ArtizenERC1155__factory {
    return super.connect(signer) as ArtizenERC1155__factory;
  }
  static readonly contractName: "ArtizenERC1155";
  public readonly contractName: "ArtizenERC1155";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArtizenERC1155Interface {
    return new utils.Interface(_abi) as ArtizenERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArtizenERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ArtizenERC1155;
  }
}
